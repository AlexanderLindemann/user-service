{{- $namespace := .Release.Namespace -}}
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "name" . -}}
{{- $svcPort := .Values.service.port -}}
{{- if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ include "name" . }}
  labels:
    {{- include "labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if .Values.ingress.tls }}
  tls:
  {{- range .Values.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - "{{ . }}"
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
{{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
    - host: "{{ .host }}"
      http:
        paths:
        {{- range .paths }}
          - path: {{ . }}
            backend:
              service:
                name: {{ $fullName }}
                port: 
                  number: {{ $svcPort }}
            pathType: ImplementationSpecific
        {{- end }}
  {{- end }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "name" . }}
  labels:
    {{- include "labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: {{ .Values.container.port }}
      protocol: TCP
      name: http
  selector:
    {{- include "selectorLabels" . | nindent 4 }}
---
{{ include "buildConfigMap" . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "name" . }}
  labels:
    {{- include "labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "selectorLabels" . | nindent 8 }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "SNAPSHOT" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.container.port }}
              protocol: TCP
        {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{ if .Values.livenessProbe.httpGet }}
            httpGet:
                port: {{ .Values.livenessProbe.httpGet.port | default 8080}}
                path: {{ .Values.livenessProbe.httpGet.path | default "/actuator/health"}}
                scheme: {{ .Values.livenessProbe.httpGet.scheme | default "HTTP" }}
            {{ end }}
            {{ end }}
        
        
        {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds  }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold  }}
        {{ if .Values.readinessProbe.httpGet }}
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path | default "/actuator/health" }}
              port: {{ .Values.readinessProbe.httpGet.port | default 8080 }}
              scheme: {{ .Values.readinessProbe.httpGet.scheme  | default "HTTP" }}
            {{ end }}
            {{ end }}

          env:
          #Переменная KUBERNETES_DEPLOYED нужна, чтобы Helm обновлял поды, елси мы обновим образ без изменения тега
            - name: KUBERNETES_DEPLOYED 
              value: "{{ now }}"
            {{- range $key, $value := $.Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}