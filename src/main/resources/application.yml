spring:
  application:
    name: user-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/users
    username: users
    password: users
    hikari:
      pool-name: SpringBootHikariCP
      maximum-pool-size: 30
      minimum-idle: 5
      max-lifetime: 2000000
      connection-timeout: 30000
      idle-timeout: 600000
      leak-detection-threshold: 1000000000
      dbcp2:
        test-while-idle: true
        test-on-borrow: true
  jpa:
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.PostgreSQL94Dialect
    properties:
      hibernate:
        format_sql: true
    show-sql: false
    open-in-view: false
  liquibase:
    change-log: classpath:db/changelog/db.changelog.xml
  kafka:
    bootstrap-servers: tswf.io:9092
    producer:
      enabled: false
      topic: user-service
    consumer:
      enabled: false
      group:
        id: user-service
      poll-service:
        topic: poll-service
      feed-service:
        topic: feed-service
      challenge-service:
        topic: challenge-service
      quiz-service:
        topic: quiz-service
      platform-activity-service:
        topic: platform-activity-service
      token-management-service:
        topic: token-management-service

redis:
  enabled: true
  address: 127.0.0.1:6379
  password: ""
  connectionTimeout: 15
  prefix: "nft-platform-app-caches-sync-"
  database: 0
  sentinel:
    enabled: false # set to true if sentinel needs to use
    nodes: 127.0.0.1:26379
    master: "mymaster"

swagger:
  display:
    module-name: user-service
    api-version: 1.0

security:
  oauth2:
    client:
      access-token-uri: ${rest.security.issuer-uri}/protocol/openid-connect/token
      client-id: account
      scope: openid
      user-authorization-uri: ${rest.security.issuer-uri}/protocol/openid-connect/auth
    resource:
      id: account
      jwt:
        key-value: |-
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqX9FCU+uiDbTxWc4pY3rH34k1KTdHF9FoEUSZfr/VX+8r6KPnuJShVXj247/X68b3kl+mwrr8j89eROS4w09yU4tqEkB1/QBy7lpckFKdQlJ5OawAzVC642qcIV2o7PpJdyhAjEdAi4G5CmNGnuA0Jpq9qxeNWTse15BQ/30ATPdHccdthO97rpe15K5q2nqTDTJ6QN6PLYIBMMCMqKHSs6t6FRUvPqe8SL9Pk7z/Tptyc4FB2A7uJvoFGa7rwa9jVIC434w/2u1O2clQDNMfcvdycqvk+16fZqYAENw0oY2KhGtrOPfjoUOjdRG+77EmYGgTLi0BHX+PIZJZz3PNQIDAQAB
          -----END PUBLIC KEY-----
      token-info-uri: ${rest.security.issuer-uri}/protocol/openid-connect/token/introspect
      user-info-uri: ${rest.security.issuer-uri}/protocol/openid-connect/userinfo

rest:
  security:
    enabled: true
    issuer-uri: ${nft.stand.base-url}/auth/realms/nftplatform

server:
  port: 8080

feign:
  nft-admin-auth:
    url: ${nft.stand.base-url}
    path: /auth/realms/nftplatform/protocol/openid-connect/token
  nft-solana-adapter:
    url: ${nft.stand.base-url}/solana-adapter
  nft-file-service:
    url: ${nft.stand.base-url}/file-service
  nft-service-api:
    url: ${nft.stand.base-url}/nft-service

nft:
  logging:
    useJsonFormat: false
    logstash:
      enabled: true
      address: localhost:5000
  audit:
    kafka:
      topic: audit-record-topic
    enabled: true
    provider: kafka
  stand:
    base-url: https://nftdev.nnmdev.ru
  tech:
    user:
      auth:
        clientId: account
        username: nftbackend@no.no
        password: 8yfz537z3yr7h99w
  token-management:
    enable: false
  period:
    cronExpression: "0 0 */8 * * *"
  tmpfantokens:
    cronExpression: "0 0 1 * * *"
    olderThanDays: 30
  retrydistribute:
    retrycronExpression: "0 0 */8 * * *"
    clearcronExpression: "0 0 2 * * *"
    olderThanDays: 2
  celebrity:
    default-uuid: "d212e77f-3057-4db5-80f2-14d52d4dae35"

management:
  endpoints:
    web:
      exposure:
        include: [ 'configprops', 'env', 'health', 'info', 'advmetrics', 'loggers', 'threaddump', 'metrics' ]
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
      show-components: always
    advmetrics:
      enabled: true
  info:
    git:
      mode: full
  metrics:
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: ${spring.application.name}
    web:
      server:
        request:
          autotime:
            enabled: true
