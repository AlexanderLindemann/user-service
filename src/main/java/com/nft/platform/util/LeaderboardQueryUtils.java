package com.nft.platform.util;

import lombok.experimental.UtilityClass;

@UtilityClass
public class LeaderboardQueryUtils {

    public static final String REFRESH_QUERY = "REFRESH MATERIALIZED VIEW CONCURRENTLY leaderboard_numbers";

    public static final String CALCULATE_LEADERBOARD_FOR_USER = ""
            + "WITH curr_user AS("
            + "    SELECT row_number, keycloak_user_id, points, period_id"
            + "    FROM leaderboard_numbers2"
            + "    WHERE keycloak_user_id = :keycloak_user_id),"
            + "    count_leaderboard AS ("
            + "            SELECT count(*)"
            + "            FROM leaderboard_numbers2"
            + "     ),"
            + "     curr_user_with_neighbours AS ("
            + "             SELECT row_number, keycloak_user_id, points, null AS user_group, period_id"
            + "             FROM curr_user"
            + "             UNION"
            + "             SELECT row_number, keycloak_user_id, points, null AS user_group, period_id"
            + "             FROM leaderboard_numbers2"
            + "             WHERE row_number = (SELECT row_number - 1 FROM curr_user)"
            + "             UNION"
            + "             SELECT row_number, keycloak_user_id, points, null AS user_group, period_id"
            + "             FROM leaderboard_numbers2"
            + "             WHERE row_number = (SELECT row_number +1 FROM curr_user)"
            + "             ),"
            + "     top10 AS ("
            + "             SELECT row_number, keycloak_user_id, points, 'TOP_10' AS user_group, period_id"
            + "             FROM leaderboard_numbers2"
            + "             WHERE row_number < (SELECT * FROM count_leaderboard)*10/100"
            + "             ORDER BY row_number"
            + "             LIMIT 3"
            + "     ),"
            + "     top10_last AS ("
            + "             SELECT row_number, keycloak_user_id, points, 'TOP_10' AS user_group, period_id"
            + "             FROM leaderboard_numbers2"
            + "             WHERE row_number = (SELECT * FROM count_leaderboard)*10/100"
            + "             ),"
            + "     top20 AS ("
            + "             SELECT row_number, keycloak_user_id, points, 'TOP_20' AS user_group, period_id"
            + "             FROM leaderboard_numbers2"
            + "             WHERE row_number > (SELECT top10_last.row_number FROM top10_last)"
            + "                  and row_number < (SELECT * FROM count_leaderboard)*20/100"
            + "             ORDER BY row_number"
            + "             limit 3"
            + "             ),"
            + "     top20_last AS ("
            + "             SELECT row_number, keycloak_user_id, points, 'TOP_20' AS user_group, period_id"
            + "             FROM leaderboard_numbers2"
            + "             WHERE row_number = (SELECT * FROM count_leaderboard)*20/100"
            + "             ),"
            + "     top30 AS ("
            + "             SELECT row_number, keycloak_user_id, points, 'TOP_30' AS user_group, period_id"
            + "             FROM leaderboard_numbers2"
            + "             WHERE row_number > (SELECT top20_last.row_number FROM top20_last)"
            + "                  and row_number < (SELECT * FROM count_leaderboard)*30/100"
            + "             ORDER BY row_number"
            + "             limit 3"
            + "             ),"
            + "     top30_last AS ("
            + "             SELECT row_number, keycloak_user_id, points, 'TOP_30' AS user_group, period_id"
            + "             FROM leaderboard_numbers2"
            + "             WHERE row_number = (SELECT * FROM count_leaderboard)*30/100"
            + "             ),"
            + "     top40 AS ("
            + "             SELECT row_number, keycloak_user_id, points, 'TOP_40' AS user_group, period_id"
            + "             FROM leaderboard_numbers2"
            + "             WHERE row_number > (SELECT top30_last.row_number FROM top30_last)"
            + "                  and row_number < (SELECT * FROM count_leaderboard)*40/100"
            + "             ORDER BY row_number"
            + "             limit 3"
            + "             ),"
            + "     top40_last AS ("
            + "             SELECT row_number, keycloak_user_id, points, 'TOP_40' AS user_group, period_id"
            + "             FROM leaderboard_numbers2"
            + "             WHERE row_number = (SELECT * FROM count_leaderboard)*40/100"
            + "             ),"
            + "     top50 AS ("
            + "             SELECT row_number, keycloak_user_id, points, 'TOP_50' AS user_group, period_id"
            + "             FROM leaderboard_numbers2"
            + "             WHERE row_number > (SELECT top40_last.row_number FROM top40_last)"
            + "                  and row_number < (SELECT * FROM count_leaderboard)*50/100"
            + "             ORDER BY row_number"
            + "             limit 3"
            + "             ),"
            + "     top50_last AS ("
            + "             SELECT row_number, keycloak_user_id, points, 'TOP_50' AS user_group, period_id"
            + "             FROM leaderboard_numbers2"
            + "             WHERE row_number = (SELECT * FROM count_leaderboard)*50/100"
            + "             ),"
            + "     last_row AS ("
            + "             SELECT row_number, keycloak_user_id, points, 'NOT_TOP_50' AS user_group, period_id"
            + "             FROM leaderboard_numbers2"
            + "             WHERE row_number = (SELECT * FROM count_leaderboard)"
            + "             ),"
            + "     all_pos AS ("
            + "             SELECT row_number, keycloak_user_id, points, user_group, period_id"
            + "             FROM curr_user_with_neighbours"
            + "             UNION"
            + "             SELECT row_number, keycloak_user_id, points, user_group, period_id"
            + "             FROM top10"
            + "             UNION"
            + "             SELECT row_number, keycloak_user_id, points, user_group, period_id"
            + "             FROM top10_last"
            + "             UNION"
            + "             SELECT row_number, keycloak_user_id, points, user_group, period_id"
            + "             FROM top20"
            + "             UNION"
            + "             SELECT row_number, keycloak_user_id, points, user_group, period_id"
            + "             FROM top20_last"
            + "             UNION"
            + "             SELECT row_number, keycloak_user_id, points, user_group, period_id"
            + "             FROM top30"
            + "             UNION"
            + "             SELECT row_number, keycloak_user_id, points, user_group, period_id"
            + "             FROM top30_last"
            + "             UNION"
            + "             SELECT row_number, keycloak_user_id, points, user_group, period_id"
            + "             FROM top40"
            + "             UNION"
            + "             SELECT row_number, keycloak_user_id, points, user_group, period_id"
            + "             FROM top40_last"
            + "             UNION"
            + "             SELECT row_number, keycloak_user_id, points, user_group, period_id"
            + "             FROM top50"
            + "             UNION"
            + "             SELECT row_number, keycloak_user_id, points, user_group, period_id"
            + "             FROM top50_last"
            + "             UNION"
            + "             SELECT row_number, keycloak_user_id, points, user_group, period_id"
            + "             FROM last_row"
            + "             UNION"
            + "             SELECT row_number, keycloak_user_id, points, user_group, period_id"
            + "             FROM top_10_rows"
            + "     )"
            + "     SELECT cast(row_number as int), cast(keycloak_user_id as varchar), points, user_group "
            + "     FROM all_pos "
            + "     WHERE period_id = (SELECT id FROM period WHERE status = 'ACTIVE') "
            + "     ORDER BY row_number";

    public static final String FIND_LEADERBOARD_TOP_6_AND_LAST = ""
            + "WITH count_leaderboard AS ("
            + "            SELECT count(*)"
            + "            FROM leaderboard_numbers"
            + "     ),"
            + "     top6 AS ("
            + "             SELECT row_number, keycloak_user_id, points, null AS user_group, period_id"
            + "             FROM leaderboard_numbers"
            + "             WHERE row_number < 7"
            + "             ORDER BY row_number"
            + "     ),"
            + "     last_row AS ("
            + "             SELECT row_number, keycloak_user_id, points, 'NOT_TOP_50' AS user_group, period_id"
            + "             FROM leaderboard_numbers"
            + "             WHERE row_number = (SELECT * FROM count_leaderboard)"
            + "             ),"
            + "     all_pos AS ("
            + "             SELECT row_number, keycloak_user_id, points, user_group, period_id"
            + "             FROM top6"
            + "             UNION"
            + "             SELECT row_number, keycloak_user_id, points, user_group, period_id"
            + "             FROM last_row"
            + "     )"
            + "     SELECT cast(row_number as int), cast(keycloak_user_id as varchar), points, user_group "
            + "     FROM all_pos "
            + "     WHERE period_id = (SELECT id FROM period WHERE status = 'ACTIVE') "
            + "     ORDER BY row_number";
}
